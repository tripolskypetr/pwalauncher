const dotenv = require('dotenv')
const path = require("path");
const fs = require("fs");

const readConfig = (path) => dotenv.parse(fs.readFileSync(path));

module.exports = {
    apps: [
        {
            name: "apartment",
            exec_mode: "fork",
            instances: "1",
            autorestart: true,
            max_restarts: "5",
            script: "./apartment/apartment.js",
            interpreter: process.env.NVM_BIN ? path.join(process.env.NVM_BIN, "node") : undefined,
            env: readConfig("./apartment/.env"),
        },
        {
            name: "bid",
            exec_mode: "fork",
            instances: "1",
            autorestart: true,
            max_restarts: "5",
            script: "./bid/bid.js",
            interpreter: process.env.NVM_BIN ? path.join(process.env.NVM_BIN, "node") : undefined,
            env: readConfig("./bid/.env"),
        },
        {
            name: "calendar",
            exec_mode: "fork",
            instances: "1",
            autorestart: true,
            max_restarts: "5",
            script: "./calendar/calendar.js",
            interpreter: process.env.NVM_BIN ? path.join(process.env.NVM_BIN, "node") : undefined,
            env: readConfig("./calendar/.env"),
        },
        {
            name: "call",
            exec_mode: "fork",
            instances: "1",
            autorestart: true,
            max_restarts: "5",
            script: "./call/index.js",
            interpreter: process.env.NVM_BIN ? path.join(process.env.NVM_BIN, "node") : undefined,
            env: readConfig("./call/.env"),
        },
        {
            name: "contact",
            exec_mode: "fork",
            instances: "1",
            autorestart: true,
            max_restarts: "5",
            script: "./contact/contact.js",
            interpreter: process.env.NVM_BIN ? path.join(process.env.NVM_BIN, "node") : undefined,
            env: readConfig("./contact/.env"),
        },
        {
            name: "index",
            exec_mode: "fork",
            instances: "1",
            autorestart: true,
            max_restarts: "5",
            script: "./index/index.js",
            interpreter: process.env.NVM_BIN ? path.join(process.env.NVM_BIN, "node") : undefined,
            env: readConfig("./index/.env"),
        },
        {
            name: "lead",
            exec_mode: "fork",
            instances: "1",
            autorestart: true,
            max_restarts: "5",
            script: "./lead/index.js",
            interpreter: process.env.NVM_BIN ? path.join(process.env.NVM_BIN, "node") : undefined,
            env: readConfig("./lead/.env"),
        },
        {
            name: "sms",
            exec_mode: "fork",
            instances: "1",
            autorestart: true,
            max_restarts: "5",
            script: "./sms/index.js",
            interpreter: process.env.NVM_BIN ? path.join(process.env.NVM_BIN, "node") : undefined,
            env: readConfig("./sms/.env"),
        },
        {
            name: "telegram",
            exec_mode: "fork",
            instances: "1",
            autorestart: true,
            max_restarts: "5",
            script: "./telegram/telegram.js",
            interpreter: process.env.NVM_BIN ? path.join(process.env.NVM_BIN, "node") : undefined,
            env: readConfig("./telegram/.env"),
        },
        {
            name: "telegraph",
            exec_mode: "fork",
            instances: "1",
            autorestart: true,
            max_restarts: "5",
            script: "./telegraph/telegraph.js",
            interpreter: process.env.NVM_BIN ? path.join(process.env.NVM_BIN, "node") : undefined,
            env: readConfig("./telegraph/.env"),
        },
        {
            name: "wwwroot",
            exec_mode: "fork",
            script: "serve -l tcp://0.0.0.0:80 -s wwwroot",
            instances: "1",
            autorestart: true,
            max_restarts: 5,
        },
        {
            name: "lead_bot",
            exec_mode: "fork",
            script: "./lead_bot/main.py",
            instances: "1",
            autorestart: true,
            max_restarts: 5,
            interpreter: "python3",
            env: readConfig("./lead_bot/.env"),
        }
    ],
};
